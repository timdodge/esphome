substitutions:
  device_name: inverter
  friendly_name: "Growatt Inverter"
  device_description: "Growatt SPH5000"
  upd_int_default: 30s
  upd_int_slow: 360s

esphome:
  name: $device_name
  friendly_name: $friendly_name

esp8266:
  board: d1_mini

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  manual_ip:
    static_ip: 172.23.123.13
    gateway: 172.23.123.1
    subnet: 255.255.255.0
  ap:
    ssid: $device_name
    password: !secret hotspot_wifi_password
captive_portal:

web_server:
  port: 80
  include_internal: true

logger:
  level: DEBUG
  esp8266_store_log_strings_in_flash: false
  tx_buffer_size: 64
  baud_rate: 0

api:
  encryption:
    key: !secret api_enc

ota:
  - platform: esphome
    password: !secret ota_pwd

time:
  - platform: homeassistant
    id: homeassistant_time
    timezone: Europe/London

uart:
  id: uart_modbus
  tx_pin: 1
  rx_pin: 3
  baud_rate: 9600
 
modbus:
  id: modbus1
  uart_id: uart_modbus
    
modbus_controller:
  - id: growatt
    address: 0x1
    modbus_id: modbus1
    update_interval: $upd_int_default
    setup_priority: -10    

button:
  - platform: restart
    name: "Restart"

  - platform: template
    name: "Battery First"
    on_press:
      then:
          lambda: |-
            esphome::modbus_controller::ModbusController *controller = id(growatt);
            std::vector<uint16_t> on={0,23*256+59,1};
            std::vector<uint16_t> off={0,23*256+59,0};
            int size = on.size();

            ESP_LOGI("ModbusLambda","Enqueue Writes");
            //BF1
            controller->queue_command(esphome::modbus_controller::ModbusCommandItem::create_write_multiple_command(controller,1100,size,on));
            //LF1
            controller->queue_command(esphome::modbus_controller::ModbusCommandItem::create_write_multiple_command(controller,1110,size,off));
            //GF1
            controller->queue_command(esphome::modbus_controller::ModbusCommandItem::create_write_multiple_command(controller,1080,size,off));
            ESP_LOGI("ModbusLambda","Writes");

  - platform: template
    name: "Load First"
    on_press:
      then:
          lambda: |-
            esphome::modbus_controller::ModbusController *controller = id(growatt);
            std::vector<uint16_t> on={0,23*256+59,1};
            std::vector<uint16_t> off={0,23*256+59,0};
            int size = on.size();

            ESP_LOGI("ModbusLambda","Enqueue Writes");
            //BF1
            controller->queue_command(esphome::modbus_controller::ModbusCommandItem::create_write_multiple_command(controller,1100,size,off));
            //LF1
            controller->queue_command(esphome::modbus_controller::ModbusCommandItem::create_write_multiple_command(controller,1110,size,on));
            //GF1
            controller->queue_command(esphome::modbus_controller::ModbusCommandItem::create_write_multiple_command(controller,1080,size,off));
            ESP_LOGI("ModbusLambda","Writes");

  - platform: template
    name: "Grid First"
    on_press:
      then:
          lambda: |-
            esphome::modbus_controller::ModbusController *controller = id(growatt);
            std::vector<uint16_t> on={0,23*256+59,1};
            std::vector<uint16_t> off={0,23*256+59,0};
            int size = on.size();

            ESP_LOGI("ModbusLambda","Enqueue Writes");
            //BF1
            controller->queue_command(esphome::modbus_controller::ModbusCommandItem::create_write_multiple_command(controller,1100,size,off));
            //LF1
            controller->queue_command(esphome::modbus_controller::ModbusCommandItem::create_write_multiple_command(controller,1110,size,off));
            //GF1
            controller->queue_command(esphome::modbus_controller::ModbusCommandItem::create_write_multiple_command(controller,1080,size,on));
            ESP_LOGI("ModbusLambda","Writes");

text_sensor:
  - platform: template
    name: "Status"
    icon: mdi:eye
    entity_category: diagnostic
    update_interval: $upd_int_default
    lambda: |-
      if ((id(status).state) == 1) {
        return {"Normal"};
      } else if ((id(status).state) == 0)  {
        return {"Standby"};
      } else if ((id(status).state) == 2)  {
        return {"Discharge"};
      } else if ((id(status).state) == 3)  {
        return {"Fault"};
      } else if ((id(status).state) == 4)  {
        return {"Flash"};
      } else if ((id(status).state) == 5)  {
        return {"PV Charging"};
      } else if ((id(status).state) == 6)  {
        return {"AC Charging"};
      } else if ((id(status).state) == 7)  {
        return {"Combined Charging"};
      } else if ((id(status).state) == 8)  {
        return {"Combined Charging & Bypass"};
      } else if ((id(status).state) == 9)  {
        return {"PV Charging & Bypass"};
      } else if ((id(status).state) == 10)  {
        return {"AC Charging & Bypass"};
      } else if ((id(status).state) == 11)  {
        return {"Bypass"};
      } else if (id(status).state == 12)  {
        return {"PV Charge and Discharge"};
      } else {
        return {"Unknown" + std::to_string(static_cast<int>(id(status).state))};
      }

  - platform: template
    name: "SP DSP Status"
    icon: mdi:eye
    entity_category: diagnostic
    update_interval: $upd_int_default
    lambda: |-
      if ((id(sp_state).state) == 0) {
        return {"Standby"};
      } else if ((id(sp_state).state) == 1)  {
        return {"Self-test"};
      } else if ((id(sp_state).state) == 5)  {
        return {"On-grid mode"};
      } else if ((id(sp_state).state) == 9)  {
        return {"Bypass"};
      } else {
        return {"Unknown: " + std::to_string(static_cast<int>(id(sp_state).state))};
      }

  - platform: template
    name: "Inverter Priority"
    icon: mdi:eye
    entity_category: diagnostic
    update_interval: $upd_int_default
    lambda: |-
      if ((id(inverter_prio).state) == 0) {
        return {"Load First"};
      } else if ((id(inverter_prio).state) == 1)  {
        return {"Battery First"};
      } else if ((id(inverter_prio).state) == 2)  {
        return {"Grid First"};
      } else {
        return {"Unknown: " + std::to_string(static_cast<int>(id(inverter_prio).state))};
      }

  - platform: template
    name: "System Work Mode"
    icon: mdi:eye
    entity_category: diagnostic
    update_interval: $upd_int_default
    lambda: |-
      if ((id(sw_mode).state) == 0) {
        return {"Standby"};
      } else if ((id(sw_mode).state) == 1)  {
        return {"Self-test"};
      } else if ((id(sw_mode).state) == 2)  {
        return {"Reserved"};
      } else if ((id(sw_mode).state) == 3)  {
        return {"System Fault: PV"};
      } else if ((id(sw_mode).state) == 4)  {
        return {"System Fault: String"};
      } else if ((id(sw_mode).state) == 5)  {
        return {"PV & Battery Online"};
      } else if ((id(sw_mode).state) == 6)  {
        return {"Battery Online"};
      } else if ((id(sw_mode).state) == 7)  {
        return {"PV Offline"};
      } else if ((id(sw_mode).state) == 8)  {
        return {"Battery Offline"};
      } else {
        return {"Unknown: " + std::to_string(static_cast<int>(id(inverter_prio).state))};
      }

sensor:
  - platform: wifi_signal
    name: "WiFi Signal"
    id: wifi_signal_db
    update_interval: $upd_int_slow
    internal: true

  # Reports the WiFi signal strength in %
  - platform: copy
    source_id: wifi_signal_db
    name: "WiFi Strength"
    filters:
      - lambda: return min(max(2 * (x + 100.0), 0.0), 100.0);
    unit_of_measurement: "%"
    entity_category: diagnostic

  - platform: uptime
    name: "Uptime"
    id: uptime_sensor
    update_interval: $upd_int_slow

  - platform: modbus_controller
    address: 0
    register_type: "read"
    internal: true
    id: status

  - platform: modbus_controller
    name: "PV-ALL Power"
    address: 1
    register_type: "read"
    unit_of_measurement: W
    device_class: power
    icon: mdi:solar-power
    value_type: U_DWORD
    accuracy_decimals: 1
    filters:
    - multiply: 0.1

  - platform: modbus_controller
    name: "PV1 Voltage"
    address: 3
    register_type: "read"
    unit_of_measurement: V
    device_class: voltage
    icon: mdi:solar-power
    value_type: U_WORD
    accuracy_decimals: 1
    filters:
    - multiply: 0.1

  - platform: modbus_controller
    name: "PV1 Current"
    address: 4
    register_type: "read"
    unit_of_measurement: A
    device_class: current
    icon: mdi:solar-power
    value_type: U_WORD
    accuracy_decimals: 1
    filters:
    - multiply: 0.1

  - platform: modbus_controller
    name: "PV1 Power"
    address: 5
    register_type: "read"
    unit_of_measurement: W
    device_class: power
    icon: mdi:solar-power
    value_type: U_DWORD
    accuracy_decimals: 1
    filters:
    - multiply: 0.1

  - platform: modbus_controller
    name: "PV2 Voltage"
    address: 7
    register_type: "read"
    unit_of_measurement: V
    device_class: voltage
    icon: mdi:solar-power
    value_type: U_WORD
    accuracy_decimals: 1
    filters:
    - multiply: 0.1

  - platform: modbus_controller
    name: "PV2 Current"
    address: 8
    register_type: "read"
    unit_of_measurement: A
    device_class: current
    icon: mdi:solar-power
    value_type: U_WORD
    accuracy_decimals: 1
    filters:
    - multiply: 0.1

  - platform: modbus_controller
    name: "PV2 Power"
    address: 9
    register_type: "read"
    unit_of_measurement: W
    device_class: power
    icon: mdi:solar-power
    value_type: U_DWORD
    accuracy_decimals: 1
    filters:
    - multiply: 0.1

  - platform: modbus_controller
    name: "Output Power"
    address: 35
    register_type: "read"
    unit_of_measurement: W
    device_class: power
    icon: mdi:flash
    value_type: U_DWORD
    accuracy_decimals: 1
    filters:
    - multiply: 0.1

  - platform: modbus_controller
    name: "Grid Frequency"
    address: 37
    register_type: "read"
    unit_of_measurement: Hz
    icon: mdi:sine-wave
    value_type: U_WORD
    accuracy_decimals: 1
    filters:
    - multiply: 0.01

  - platform: modbus_controller
    name: "Inverter Output Voltage (Single/First Phase)"
    address: 38
    register_type: "read"
    unit_of_measurement: V
    device_class: voltage
    icon: mdi:flash
    value_type: U_WORD
    accuracy_decimals: 1
    filters:
    - multiply: 0.1

  - platform: modbus_controller
    name: "Inverter Output Current (Single/First Phase)"
    address: 39
    register_type: "read"
    unit_of_measurement: A
    device_class: current
    icon: mdi:flash
    value_type: U_WORD
    accuracy_decimals: 1
    filters:
    - multiply: 0.1

  - platform: modbus_controller
    name: "Inverter Output Power (Single/First Phase)"
    address: 40
    register_type: "read"
    unit_of_measurement: W
    device_class: power
    icon: mdi:flash
    value_type: U_DWORD
    accuracy_decimals: 1
    filters:
    - multiply: 0.1

#  - platform: modbus_controller
#    name: "AcVoltage VAC2"
#    address: 42
#    register_type: "read"
#    unit_of_measurement: V
#    device_class: voltage
#    icon: mdi:flash
#    value_type: U_WORD
#    accuracy_decimals: 1
#    filters:
#    - multiply: 0.1

#  - platform: modbus_controller
#    name: "AcOutputCurrent IAC2"
#    address: 43
#    register_type: "read"
#    unit_of_measurement: A
#    device_class: current
#    icon: mdi:flash
#    value_type: U_WORD
#    accuracy_decimals: 1
#    filters:
#    - multiply: 0.1

#  - platform: modbus_controller
#    name: "AcPower PAC2"
#    address: 44
#    register_type: "read"
#    unit_of_measurement: W
#    device_class: power
#    icon: mdi:flash
#    value_type: U_DWORD
#    accuracy_decimals: 1
#    filters:
#    - multiply: 0.1

#  - platform: modbus_controller
#    name: "AcVoltage VAC3"
#    address: 46
#    register_type: "read"
#    unit_of_measurement: V
#    device_class: voltage
#    icon: mdi:flash
#    value_type: U_WORD
#    accuracy_decimals: 1
#    filters:
#    - multiply: 0.1

#  - platform: modbus_controller
#    name: "AcOutputCurrent IAC3"
#    address: 47
#    register_type: "read"
#    unit_of_measurement: A
#    device_class: current
#    icon: mdi:flash
#    value_type: U_WORD
#    accuracy_decimals: 1
#    filters:
#    - multiply: 0.1

#  - platform: modbus_controller
#    name: "AcPower PAC3"
#    address: 48
#    register_type: "read"
#    unit_of_measurement: W
#    device_class: power
#    icon: mdi:flash
#    value_type: U_DWORD
#    accuracy_decimals: 1
#    filters:
#    - multiply: 0.1

  - platform: modbus_controller
    name: "Power Generation - Today"
    address: 53
    register_type: "read"
    unit_of_measurement: kWh
    state_class: total_increasing
    device_class: energy
    icon: mdi:solar-power
    value_type: U_DWORD
    accuracy_decimals: 1
    filters:
    - multiply: 0.1

  - platform: modbus_controller
    name: "Power Generation - Total"
    address: 55
    register_type: "read"
    unit_of_measurement: kWh
    state_class: total_increasing
    device_class: energy
    icon: mdi:solar-power
    value_type: U_DWORD
    accuracy_decimals: 1
    filters:
    - multiply: 0.1

  - platform: modbus_controller
    name: "Time Since Commissioned"
    address: 57
    register_type: "read"
    unit_of_measurement: s
    state_class: total
    device_class: duration
    entity_category: diagnostic
    icon: mdi:clock
    value_type: U_DWORD
    accuracy_decimals: 1
    filters:
    - multiply: 0.5

  - platform: modbus_controller
    name: "PV1 Energy - Today"
    address: 59
    register_type: "read"
    unit_of_measurement: kWh
    state_class: total_increasing
    device_class: energy
    icon: mdi:solar-power
    value_type: U_DWORD
    accuracy_decimals: 1
    filters:
    - multiply: 0.1

  - platform: modbus_controller
    name: "PV1 Energy - Total"
    address: 61
    register_type: "read"
    unit_of_measurement: kWh
    state_class: total_increasing
    device_class: energy
    icon: mdi:solar-power
    value_type: U_DWORD
    accuracy_decimals: 1
    filters:
    - multiply: 0.1

  - platform: modbus_controller
    name: "PV2 Energy - Today"
    address: 63
    register_type: "read"
    unit_of_measurement: kWh
    state_class: total_increasing
    device_class: energy
    icon: mdi:solar-power
    value_type: U_DWORD
    accuracy_decimals: 1
    filters:
    - multiply: 0.1

  - platform: modbus_controller
    name: "PV2 Energy - Total"
    address: 65
    register_type: "read"
    unit_of_measurement: kWh
    state_class: total_increasing
    device_class: energy
    icon: mdi:solar-power
    value_type: U_DWORD
    accuracy_decimals: 1
    filters:
    - multiply: 0.1

  - platform: modbus_controller
    name: "PV-All Energy - Total"
    address: 91
    register_type: "read"
    unit_of_measurement: kWh
    state_class: total_increasing
    device_class: energy
    icon: mdi:solar-power
    value_type: U_DWORD
    accuracy_decimals: 1
    filters:
    - multiply: 0.1

  - platform: modbus_controller
    name: "Inverter Temperature"
    address: 93
    register_type: "read"
    unit_of_measurement: °C
    device_class: temperature
    state_class: measurement
    entity_category: diagnostic
    icon: mdi:thermometer
    value_type: U_WORD
    accuracy_decimals: 1
    filters:
    - multiply: 0.1

  - platform: modbus_controller
    name: "IPM  Temperature"
    address: 94
    register_type: "read"
    unit_of_measurement: °C
    device_class: temperature
    state_class: measurement
    entity_category: diagnostic
    icon: mdi:thermometer
    value_type: U_WORD
    accuracy_decimals: 1
    filters:
    - multiply: 0.1

  - platform: modbus_controller
    name: "Boost Temperature"
    address: 95
    register_type: "read"
    unit_of_measurement: °C
    device_class: temperature
    state_class: measurement
    entity_category: diagnostic
    icon: mdi:thermometer
    value_type: U_WORD
    accuracy_decimals: 1
    filters:
    - multiply: 0.1

  - platform: modbus_controller
    address: 118
    register_type: "read"
    internal: true
    id: inverter_prio
    
  - platform: modbus_controller
    address: 1000
    register_type: "read"
    internal: true
    id: sw_mode

  - platform: modbus_controller
    name: "Battery Discharging Power"
    address: 1009
    register_type: "read"
    unit_of_measurement: W
    device_class: power
    icon: mdi:battery-arrow-down
    value_type: U_DWORD
    accuracy_decimals: 1
    filters:
    - multiply: 0.1

  - platform: modbus_controller
    name: "Battery Charging Power"
    address: 1011
    register_type: "read"
    unit_of_measurement: W
    device_class: power
    icon: mdi:battery-arrow-up
    value_type: U_DWORD
    accuracy_decimals: 1
    filters:
    - multiply: 0.1

  - platform: modbus_controller
    name: "Battery Voltage"
    address: 1013
    register_type: "read"
    unit_of_measurement: V
    device_class: voltage
    icon: mdi:home-battery
    value_type: U_WORD
    accuracy_decimals: 1
    filters:
    - multiply: 0.1

  - platform: modbus_controller
    name: "State of Charge"
    address: 1014
    register_type: "read"
    unit_of_measurement: "%"
    icon: mdi:home-battery
    value_type: U_WORD
    accuracy_decimals: 0

  - platform: modbus_controller
    name: "Import from Grid Power"
    address: 1015
    register_type: "read"
    unit_of_measurement: W
    device_class: power
    icon: mdi:home-import-outline
    value_type: U_DWORD
    accuracy_decimals: 1
    filters:
    - multiply: 0.1

#  - platform: modbus_controller
#    name: "Power to User 2"
#    address: 1017
#    register_type: "read"
#    unit_of_measurement: W
#    device_class: power
#    icon: mdi:flash
#    value_type: U_DWORD
#    accuracy_decimals: 1
#    filters:
#    - multiply: 0.1

#  - platform: modbus_controller
#    name: "Power to User 3"
#    address: 1019
#    register_type: "read"
#    unit_of_measurement: W
#    device_class: power
#    icon: mdi:flash
#    value_type: U_DWORD
#    accuracy_decimals: 1
#    filters:
#    - multiply: 0.1

#  - platform: modbus_controller
#    name: "Import from Grid Total"
#    address: 1021
#    register_type: "read"
#    unit_of_measurement: kW
#    device_class: power
#    icon: mdi:flash
#    value_type: U_DWORD
#    accuracy_decimals: 3
#    filters:
#    - multiply: 0.0001

  - platform: modbus_controller
    name: "Export to Grid Power"
    address: 1023
    register_type: "read"
    unit_of_measurement: W
    device_class: power
    icon: mdi:home-export-outline
    value_type: U_DWORD
    accuracy_decimals: 1
    filters:
    - multiply: 0.1

#  - platform: modbus_controller
#    name: "Power to Grid 2"
#    address: 1025
#    register_type: "read"
#    unit_of_measurement: W
#    device_class: power
#    icon: mdi:flash
#    value_type: U_DWORD
#    accuracy_decimals: 1
#    filters:
#    - multiply: 0.1

#  - platform: modbus_controller
#    name: "Power to Grid 3"
#    address: 1027
#    register_type: "read"
#    unit_of_measurement: W
#    device_class: power
#    icon: mdi:flash
#    value_type: U_DWORD
#    accuracy_decimals: 1
#    filters:
#    - multiply: 0.1

#  - platform: modbus_controller
#    name: "Export to Grid Total"
#    address: 1029
#    register_type: "read"
#    unit_of_measurement: kW
#    device_class: power
#    icon: mdi:flash
#    value_type: U_DWORD
#    accuracy_decimals: 3
#    filters:
#    - multiply: 0.0001

  - platform: modbus_controller
    name: "Load Consumption Power"
    address: 1031
    register_type: "read"
    unit_of_measurement: W
    device_class: power
    icon: mdi:home-lightning-bolt
    value_type: U_DWORD
    accuracy_decimals: 1
    filters:
    - multiply: 0.1

#  - platform: modbus_controller
#    name: "INV Power to Local Load 2"
#    address: 1033
#    register_type: "read"
#    unit_of_measurement: W
#    device_class: power
#    icon: mdi:flash
#    value_type: U_DWORD
#    accuracy_decimals: 1
#    filters:
#    - multiply: 0.1

#  - platform: modbus_controller
#    name: "INV Power to Local Load 3"
#    address: 1035
#    register_type: "read"
#    unit_of_measurement: W
#    device_class: power
#    icon: mdi:flash
#    value_type: U_DWORD
#    accuracy_decimals: 1
#    filters:
#    - multiply: 0.1

#  - platform: modbus_controller
#    name: "INV Power to Local Load Total"
#    address: 1037
#    register_type: "read"
#    unit_of_measurement: kW
#    device_class: power
#    icon: mdi:flash
#    value_type: U_DWORD
#    accuracy_decimals: 3
#    filters:
#    - multiply: 0.0001

  - platform: modbus_controller
    name: "Battery Temperature"
    address: 1040
    register_type: "read"
    unit_of_measurement: °C
    device_class: temperature
    state_class: measurement    
    entity_category: diagnostic
    icon: mdi:thermometer
    value_type: U_WORD
    accuracy_decimals: 1
    filters:
    - multiply: 0.1

  - platform: modbus_controller
    address: 1041
    register_type: "read"
    internal: true
    id: sp_state

  - platform: modbus_controller
    name: "Import from Grid Energy - Today"
    address: 1044
    register_type: "read"
    unit_of_measurement: kWh
    state_class: total_increasing
    device_class: energy
    icon: mdi:home-import-outline
    value_type: U_DWORD
    accuracy_decimals: 1
    filters:
    - multiply: 0.1

  - platform: modbus_controller
    name: "Import from Grid Energy - Total"
    address: 1046
    register_type: "read"
    unit_of_measurement: kWh
    state_class: total_increasing
    device_class: energy
    icon: mdi:home-import-outline
    value_type: U_DWORD
    accuracy_decimals: 1
    filters:
    - multiply: 0.1

  - platform: modbus_controller
    name: "Export to Grid Energy - Today"
    address: 1048
    register_type: "read"
    unit_of_measurement: kWh
    state_class: total_increasing
    device_class: energy
    icon: mdi:home-export-outline
    value_type: U_DWORD
    accuracy_decimals: 1
    filters:
    - multiply: 0.1

  - platform: modbus_controller
    name: "Export to Grid Energy - Total"
    address: 1050
    register_type: "read"
    unit_of_measurement: kWh
    state_class: total_increasing
    device_class: energy
    icon: mdi:home-export-outline
    value_type: U_DWORD
    accuracy_decimals: 1
    filters:
    - multiply: 0.1

  - platform: modbus_controller
    name: "Battery Discharged Energy - Today"
    address: 1052
    register_type: "read"
    unit_of_measurement: kWh
    state_class: total_increasing
    device_class: energy
    icon: mdi:battery-arrow-down
    value_type: U_DWORD
    accuracy_decimals: 1
    filters:
    - multiply: 0.1

  - platform: modbus_controller
    name: "Battery Discharged Energy - Total"
    address: 1054
    register_type: "read"
    unit_of_measurement: kWh
    state_class: total_increasing
    device_class: energy
    icon: mdi:battery-arrow-down
    value_type: U_DWORD
    accuracy_decimals: 1
    filters:
    - multiply: 0.1

  - platform: modbus_controller
    name: "Battery Charged Energy - Today"
    address: 1056
    register_type: "read"
    unit_of_measurement: kWh
    state_class: total_increasing
    device_class: energy
    icon: mdi:battery-arrow-up
    value_type: U_DWORD
    accuracy_decimals: 1
    filters:
    - multiply: 0.1

  - platform: modbus_controller
    name: "Battery Charged Energy - Total"
    address: 1058
    register_type: "read"
    unit_of_measurement: kWh
    state_class: total_increasing
    device_class: energy
    icon: mdi:battery-arrow-up
    value_type: U_DWORD
    accuracy_decimals: 1
    filters:
    - multiply: 0.1

  - platform: modbus_controller
    name: "Load Consumption Energy - Today"
    address: 1060
    register_type: "read"
    unit_of_measurement: kWh
    state_class: total_increasing
    device_class: energy
    icon: mdi:home-lightning-bolt
    value_type: U_DWORD
    accuracy_decimals: 1
    filters:
    - multiply: 0.1

  - platform: modbus_controller
    name: "Load Consumption Energy - Total"
    address: 1062
    register_type: "read"
    unit_of_measurement: kWh
    state_class: total_increasing
    device_class: energy
    icon: mdi:home-lightning-bolt
    value_type: U_DWORD
    accuracy_decimals: 1
    filters:
    - multiply: 0.1

  - platform: modbus_controller
    name: "Battery AC Charge Energy - Today"
    address: 1124
    register_type: "read"
    unit_of_measurement: kWh
    state_class: total_increasing
    device_class: energy
    icon: mdi:battery-arrow-up
    value_type: U_DWORD
    accuracy_decimals: 1
    filters:
    - multiply: 0.1

  - platform: modbus_controller
    name: "Battery AC Charge Energy - Total"
    address: 1126
    register_type: "read"
    unit_of_measurement: kWh
    state_class: total_increasing
    device_class: energy
    icon: mdi:battery-arrow-up
    value_type: U_DWORD
    accuracy_decimals: 1
    filters:
    - multiply: 0.1

#select:
#  - platform: modbus_controller
#    name: "Inverter Priority"
#    icon: mdi:arrow-decision-outline
#    address: 1044
#    value_type: U_WORD
#    optionsmap:
#      "Load First": 0
#      "Battery First": 1
#      "Grid First": 2
#
#  - platform: modbus_controller
#    name: "AC Charging"
#    icon: mdi:battery-charging-100
#    address: 1092
#    value_type: U_WORD
#    optionsmap:
#      "Disabled": 0
#      "Enabled": 1

number:
  - platform: modbus_controller
    name: "Discharge Power Rate"
    address: 1070
    register_type: holding
    value_type: U_WORD
    min_value: 10
    max_value: 100
    step: 1

  - platform: modbus_controller
    name: "Discharge SoC"
    address: 1071
    register_type: holding
    value_type: U_WORD
    min_value: 10
    max_value: 100
    step: 1

  - platform: modbus_controller
    name: "Charge Power Rate"
    address: 1090
    register_type: holding
    value_type: U_WORD
    min_value: 10
    max_value: 100
    step: 1

  - platform: modbus_controller
    name: "Charge SoC"
    address: 1091
    register_type: holding
    value_type: U_WORD
    min_value: 10
    max_value: 100
    step: 1